/********************************
** New ATD Clarity theme - GLG **
********************************/

// - Global
// - Alerts
// - Badge
// - Button
// - Datagrid
// - Dropdown
// - Form, Input, Checkbox, Radio, Toggle
// - Header
// - Label
// - Login
// - Modal
// - Nav
// - Table
// - Progress Bars
// - Signpost
// - Spinner
// - Stack View
// - Table
// - Tabs
// - Tooltip
// - Tree View
// - Typography
// - Vertical Nav
// - Wizard

/*********
 * Global variables will have an effect on or in multiple Clarity components.
 * Where possible, there is a list files affected by the variable.
 */


/**********
 * Colors
 * 
 *
 * Usage: ./_colors.clarity.scss
 */

$ATD-dark-blue: #001a31;
$ATD-blue: #227fb8;
$ATD-blue-alt: #1b6593;
$ATD-light-blue: #e3edf5;
$ATD-gray-1: #414042;
$ATD-gray-2: #6f6f6f;
$ATD-gray-3: #b9b8b8;
$ATD-gray-4: #e6e6e6;
$ATD-off-white: #f4f4f4;
$ATD-dark-red: #d63c24;
$ATD-green: #62a420;
$ATD-Yellow: #efd603;
$ATD-purple: #9460b8;
$ATD-orange: #f38b00;

$clr-action-purple-light-midtone: $ATD-purple;
$clr-yellow-light-midtone: $ATD-orange;
// END: Colors


/*********
 * Name: Link (and link state colors)
 * Description the color for links and the active, hovered and visited state
 * Usages: ./_reboot.clarity.scss
 */
$clr-link-active-color: $ATD-blue;
$clr-link-color: $ATD-blue;
$clr-link-hover-color: $ATD-dark-blue;
$clr-link-visited-color: $ATD-blue;
// END: Global Clarity Variables


/**********
 * Alerts
 * Alerts are banners that communicate a message with a severity attached to it. They grab the userâ€™s attention to
 * provide critical information needed in context. These variables control the background-color and font color for each
 * of the alert types.
 *
 * There are seven types of alert and we set the background-color and font color for each here.
 * Usage: ./_maps.clarity.scss
 */

$clr-alert-app-disabled-color: #6d7884;
$clr-theme-alert-font-color: #e9ecef;
//clr-theme-app-alert-font-color: $clr-black;

// Info type
$clr-alert-info-bg-color: $ATD-light-blue;

// Success type
$clr-alert-success-bg-color: #dff0d0;

// Danger type
$clr-alert-danger-bg-color: #f5dbd9;

// Warning type
$clr-alert-warning-bg-color: #feecb5;

// App Info type
$clr-app-alert-info-bg-color: $ATD-blue;

/**********
 * END: Alerts
 */


/*****************
 * Badge
 * Badges provide a method to highlight a count of an element either next to it or inside the element itself.
 * Here you can set the background-color and font color(s) for the various badge types.
 * There are five color options and four status types a Clarity label may have.
 *
 * Usage: ./_maps.clarity.scss
 */
$clr-badge-font-color: $gray-lightest;

// Usage: ../utils/_maps.clarity.scss
$clr-badge-font-color-contrast: $clr-black;

$clr-badge-info-bg-color: #007cbb;

$clr-badge-success-bg-color: $ATD-green;
$clr-badge-warning-bg-color: $ATD-Yellow;

$clr-badge-purple-bg-color: $ATD-purple;
$clr-badge-orange-bg-color: $ATD-orange;
// END: Badge




/*****************
 * Buttons
 * Buttons allow an application to communicate action and direct user intent.
 * Buttons can be: solid, outlined or flat.
 * Solid and outline have four types: primary, success, warning, danger.
 * Buttons can be disabled.
 *
 * For each button type, use these variables to change the following button properties:
 * - background color
 * - border
 * - (font) color
 * - :hover background-color
 * - :hover (font) color
 * - box-shadow color
 *
 *  NOTE: these variables also affect button groups.
 *
 * Usage: ./_maps.clarity.scss
 */

// Default button colors
// Usage: ../utils/_maps.clarity.scss
$clr-btn-default-disabled-color: $ATD-gray-2; // disabled-color

// Default outline button
$clr-btn-default-outline-disabled-color: $ATD-gray-2; // disabled-color

// Primary button colors
// Usage: ../utils/_maps.clarity.scss
$clr-btn-primary-bg-color: $ATD-blue; // background-color, disabled-background-color
$clr-btn-primary-border-color: $ATD-blue; // border-color

// Success button colors
// Usage: ../utils/_maps.clarity.scss
$clr-btn-success-bg-color: $ATD-green; // background-color, border-color

// Success outline button colors
// Usage: ../utils/_maps.clarity.scss
$clr-btn-success-outline-color: $ATD-green; // color
$clr-btn-success-outline-border-color: $ATD-green; // border-color, checked-background-color

// Danger button colors
// Usage: ../utils/_maps.clarity.scss
$clr-btn-danger-bg-color: $ATD-dark-red; // background-color, border-color

// Danger outline button colors
// Usage: ../utils/_maps.clarity.scss
$clr-btn-danger-outline-border-color: $ATD-dark-red; // border-color
$clr-btn-danger-outline-color: $ATD-dark-red; // color
$clr-btn-danger-outline-checked-bg-color: $ATD-dark-red; // checked-background-color

// Link button colors
// Usage: ../utils/_maps.clarity.scss
$clr-btn-link-color: $ATD-blue; // color

// END: Buttons


/**********
 * Date Picker
 * 
 *
 * Usage:
 */
$clr-calendar-btn-color: $ATD-blue;


// END: Date Picker


/**********
 * Datagrid
 * Datagrids are for organizing large volumes of data that users can scan, compare, and perform actions on.
 *
 * Usage: ../data/datagrid/_datagrid.clarity.scss
 */
 // I WILL COME BACK TO THIS AFTER TABLES
// END: Datagrid



/*********
 * Dropdown
 * A dropdown menu allows the user to choose an option or action from a contextual list. Use these variables to change
 * the look-n-feel of your dropdowns.
 *
 * Usage: ../popover/dropdown/_dropdown.clarity.scss
 */
 $clr-dropdown-header-color: $ATD-dark-blue;
 $clr-dropdown-item-text-color: $ATD-gray-2;
 $clr-dropdown-text-color: $ATD-gray-2;
 $clr-dropdown-active-text-color: $ATD-gray-2;
 $clr-dropdown-bg-hover-color: $ATD-light-blue;
 $clr-dropdown-selection-color: $ATD-light-blue;
 $clr-dropdown-border-color: #ccc;
 $clr-dropdown-divider-color: $ATD-gray-4;
// END: Dropdown overrides



/******
 * Forms: TODO: track down component usages and names
 * A form is a structured layout of related input components.
 * There are a variety of variables used to change form elements, including:
 *
 * Usage:
 * ../forms/styles/_checkbox.clarity.scss
 * ../forms/styles/_containers.clarity.scss
 * ../forms/styles/_file.clarity.scss
 * ../forms/styles/_form.clarity.scss
 * ../forms/styles/_input.clarity.scss
 * ../forms/styles/_input-group.clarity.scss
 * ../forms/styles/_mixings.forms.scss
 * ../forms/styles/radio.clarity.scss
 * ../forms/styles/_select.clarity.scss
 * ../forms/styles/_textarea.clarity.scss
 * ../forms/styles/_variables.clarity.scss
 *
 */

//GENERIC
$clr-forms-label-color: $ATD-dark-blue;
$clr-forms-text-color: $ATD-gray-1;
$clr-forms-invalid-color: $ATD-dark-red;
$clr-forms-subtext-color: $ATD-gray-2;
$clr-forms-border-color: #ccc;

// Select

// Checkbox
 $clr-forms-checkbox-background-color: $ATD-blue;
 $clr-forms-checkbox-disabled-background-color: $ATD-gray-4;
 $clr-forms-checkbox-disabled-mark-color: $ATD-gray-2;

// Radio
$clr-forms-radio-disabled-background-color: $ATD-gray-4;
//$clr-forms-radio-disabled-mark-color: $ATD-gray-2;
$clr-forms-radio-disabled-shadow: inset 0 0 0 0.25rem $ATD-gray-4;
$clr-forms-radio-selected-shadow: inset 0 0 0 0.25rem $ATD-blue;

/**********
 * Header
 * Headers provide branding, navigation, search, and access to global application actions such as settings and
 * notifications. There are five header colors in the dark theme.
 *
 * Usage: ../layout/nav/_header.clarity.scss
 * -
 */
$clr-header-bgColor: $ATD-dark-blue;
$clr-header-default-bg-color: $clr-header-bgColor;
$clr-header-1-bg-color: $clr-header-bgColor;
// END Header overrides



/**********
 * Header
 * Headers provide branding, navigation, search, and access to global application actions such as settings and
 * notifications. There are five header colors in the dark theme.
 *
 * Usage: ../layout/nav/_header.clarity.scss
 * -
 */
$clr-header-bgColor: #404e60;
$clr-header-default-bg-color: $clr-header-bgColor;
$clr-header-1-bg-color: $clr-header-bgColor;
// END Header overrides

/**********
 * Icons
 * Icons by default are presentational only meaning they do not provide any context to screen readers
 *
 * Usage: ./_icons.clarity.scss
 */
$clr-icon-color-success: $ATD-dark-red;
$clr-icon-color-error: $ATD-dark-red;
$clr-icon-color-warning: $ATD-Yellow;
// END: Icons


/*****************
 * Label
 * Labels show concise metadata in a compact format. Here you can set the background-color and font color(s) for the
 * different types of labels.
 *
 * There are five color options and four status types a Clarity label may have.

 * Usage: ./_maps.clarity.scss$ATD-orange
 */
 $clr-label-orange-bg-color: $ATD-orange;
 $clr-label-purple-bg-color: $ATD-purple;
 $clr-label-info-bg-color: #e1f1f6;
// END: Labels




/*********
 * Stack View
 * A stack view displays key/value pairs, which users can expand to show more detail.
 *
 * Usage: ../data/stack-view/_stack-view.clarity.scss
 */
$clr-stack-view-stack-block-label-text-color: $ATD-gray-1;
$clr-stack-view-stack-block-expanded-text-color: $ATD-gray-1;

// END: Stack View overrides



/**********
 * Table
 * Use the table styles wherever you need to present static data in a tabular format.
 *
 * Usage:
 * - ../data/_tables.clarity.scss
 * - ../data/datagrid/_datagrid.clarity.scss
 */
 
// END: Table



/**********
 * Tree View
 * A tree is a hierarchical component that shows the visual representation of the parent-child relationship between
 * nodes.
 *
 * Usage: ../data/tree-view/_tree-view.clarity.scss
 */
$clr-tree-node-caret-color: $ATD-gray-1;
// END Tree View variables


/**********
 * Typography
 * Clarity uses the geometric sans-serif font, Metropolis.
 *
 * Usage:
 * - ../typography/_typography.clarity.scss
 * - ../data/datagrid/_datagrid.clarity.scss
 */

 @import url('https://fonts.googleapis.com/css?family=Montserrat|Roboto|Roboto+Condensed&display=swap');

$montserrat: 'Montserrat', sans-serif;
$roboto: 'Roboto', sans-serif;
$roboto-condensed: 'Roboto Condensed', sans-serif;

$clr-font: $roboto;
$clr-altFont: $montserrat;

$clr-h1-color: $ATD-dark-blue;
$clr-h2-color: $ATD-blue;
$clr-h3-color: $ATD-dark-blue;
$clr-h4-color: $ATD-blue;
$clr-h5-color: $ATD-gray-1;
$clr-h6-color: $ATD-gray-1;

$clr-p1-color: $ATD-gray-2;
$clr-p2-color: $ATD-gray-1;
$clr-p3-color: $ATD-gray-1;
$clr-p4-color: $ATD-dark-blue;
$clr-p5-color: $ATD-gray-2;
$clr-p6-color: $ATD-dark-blue;
$clr-p7-color: $ATD-gray-2;
$clr-p8-color: $ATD-gray-2;


/**********
 * Vertical Nav
 * This is a vertically-aligned navigational component.
 *
 * Usage: ../layout/vertical-nav/_vertical-nav.clarity.scss
 */
$clr-vertical-nav-bg-color: $ATD-gray-4;
$clr-vertical-nav-icon-active-color: $ATD-blue;
//$clr-vertical-nav-item-active-color: $ATD-blue;
// END Vertical Nav


/**********
 * Wizard
 * Wizards provide a way to go through a sequence of steps that form an end to end workflow..
 *
 * Usage: ../wizard/_wizard.clarity.scss
 */
// $clr-wizard-sidenav-bgcolor: #1b2a32;
// END: Wizard